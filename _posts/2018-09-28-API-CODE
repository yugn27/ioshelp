---
layout: post
title: "Sample API"
date: 2018-09-28 12:26:40
image: '/assets/img/swift.jpg'
description: Tools
category: 'Beginners'
tags:
- Swift



introduction: Sample API
---

# Sample API
```
//
//  ViewController.swift
//  api tests
//
//  Created by Yash Nayak on 20/01/19.
//  Copyright © 2019 Yash Nayak. All rights reserved.
//

import UIKit

class ViewController: UIViewController {

    struct User {
        var userId: Int
        var id: Int
        var title: String
        var completed: Bool
        init(_ dictionary: [String: Any]) {
            self.userId = dictionary["userId"] as? Int ?? 0
            self.id = dictionary["id"] as? Int ?? 0
            self.title = dictionary["title"] as? String ?? ""
            self.completed = dictionary["completed"] as? Bool ?? false
        }
    }
    

    struct user2: Codable{
        var userId: Int
        var id: Int
        var title: String
        var completed: Bool
    }
    
 
    override func viewDidLoad() {
        super.viewDidLoad()
        // Do any additional setup after loading the view, typically from a nib.
        guard let url = URL(string: "https://jsonplaceholder.typicode.com/todos") else {return}
        let task = URLSession.shared.dataTask(with: url) { (data, response, error) in
            guard let dataResponse = data,
                error == nil else {
                    print(error?.localizedDescription ?? "Response Error")
                    return }
            do{
                //here dataResponse received from a network request
                let jsonResponse = try JSONSerialization.jsonObject(with:
                    dataResponse, options: [])
                 print(jsonResponse) //Response result
                
                
                do {
                    //here dataResponse received from a network request
                    let decoder = JSONDecoder()
                    let model = try decoder.decode([user2].self, from:
                        dataResponse) //Decode JSON Response Data
                   // print(model[2])
                } catch let parsingError {
                   // print("Error", parsingError)
                }
                
            } catch let parsingError {
                print("Error", parsingError)
            }
        }
        task.resume()
    }
}

```




```
//
//  ViewController.swift
//  Easy Solution
//
//  Created by Yash Nayak on 21/01/19.
//  Copyright © 2019 Yash Nayak. All rights reserved.
//

import UIKit

class ViewController: UIViewController ,UITableViewDelegate, UITableViewDataSource{
    
    @IBOutlet var table: UITableView!
    
    var list:[MyStruct] = [MyStruct]()
    
    @IBOutlet weak var idtest: UILabel!
    @IBOutlet weak var statename: UILabel!
    
    struct MyStruct
    {
        var CountryID = ""
        var ID = ""
        var StateName = ""
        var displayorder = ""
        
        init(_ CountryID:String, _ ID:String, _ StateName:String, _ displayorder:String)
        {
            self.CountryID = CountryID
            self.ID = ID
            self.StateName = StateName
            self.displayorder = displayorder
        }
    }
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        table.dataSource = self
        table.delegate = self
        
        get_data("http://ioshelp.tk/api/data2.json")
    }
    
    
   
    
    func get_data(_ link:String)
    {
        let url:URL = URL(string: link)!
        let session = URLSession.shared
        let request = URLRequest(url: url)
        let task = session.dataTask(with: request, completionHandler: {
            (data, response, error) in
            self.extract_data(data)
        })
        task.resume()
    }
    
    func extract_data(_ data:Data?)
    {
        let json:Any?
        if(data == nil)
        {
            return
        }
        
        do{
            json = try JSONSerialization.jsonObject(with: data!, options: [])
        }
        catch
        {
            return
        }
        
        guard let data_array = json as? NSArray else
        {
            return
        }
        
        for i in 0 ..< data_array.count
        {
            if let data_object = data_array[i] as? NSDictionary
            {
                if let CountryID = data_object["CountryID"] as? String,
                    let ID = data_object["ID"] as? String,
                    let StateName = data_object["StateName"] as? String,
                    let displayorder = data_object["displayorder"] as? String
                {
                    list.append(MyStruct(CountryID, ID, StateName, displayorder))
                }
            }
        }
        refresh_now()
    }
    
    func refresh_now()
    {
        DispatchQueue.main.async(
            execute:
            {
                self.table.reloadData()
                
        })
    }
    
    
    
    public func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int
    {
        
        return list.count
    }
    
    public func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell
    {
        let cell = tableView.dequeueReusableCell(withIdentifier: "cell", for: indexPath)
        
        
        cell.textLabel?.text = "\(list[indexPath.row].ID) \(list[indexPath.row].StateName)"
        
        
        
        
        
        
        return cell
    }
    
    
}



```

Want to see something else added? <a href="https://yugn27.github.io/contact/">Open an issue.</a>
